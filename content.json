{"meta":{"title":"Alexandermucc's Blog","subtitle":"Freedom","description":null,"author":"Alexandermucc","url":"https://alexandermucc.cn","root":"/"},"pages":[{"title":"about","date":"2021-06-20T09:09:23.000Z","updated":"2021-06-20T09:10:46.380Z","comments":true,"path":"about/index.html","permalink":"https://alexandermucc.cn/about/index.html","excerpt":"","text":"我就是我，我就是不一样的烟火，赤诚与热爱，横纵山河之间"},{"title":"","date":"2021-06-20T09:14:26.082Z","updated":"2021-06-20T09:14:26.082Z","comments":true,"path":"404.html","permalink":"https://alexandermucc.cn/404.html","excerpt":"","text":"+layout: false +--- 404"},{"title":"movies","date":"2021-06-20T11:19:58.000Z","updated":"2021-06-20T13:55:27.228Z","comments":true,"path":"movies/index.html","permalink":"https://alexandermucc.cn/movies/index.html","excerpt":"","text":""},{"title":"文章分类","date":"2021-06-20T09:11:39.000Z","updated":"2021-06-20T09:12:09.457Z","comments":false,"path":"categories/index.html","permalink":"https://alexandermucc.cn/categories/index.html","excerpt":"","text":""},{"title":"books","date":"2021-06-20T11:20:09.000Z","updated":"2021-06-20T11:20:37.664Z","comments":true,"path":"books/index.html","permalink":"https://alexandermucc.cn/books/index.html","excerpt":"","text":""},{"title":"标签","date":"2021-06-20T09:09:43.000Z","updated":"2021-06-20T09:11:25.853Z","comments":false,"path":"tags/index.html","permalink":"https://alexandermucc.cn/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"hexo的优化","slug":"hexo的优化","date":"2021-06-20T13:53:46.000Z","updated":"2021-06-20T16:05:09.913Z","comments":true,"path":"archives/1253b4af.html","link":"","permalink":"https://alexandermucc.cn/archives/1253b4af.html","excerpt":"","text":"","categories":[],"tags":[]},{"title":"安装博客","slug":"安装博客","date":"2021-06-19T07:44:05.000Z","updated":"2021-06-21T10:10:44.548Z","comments":true,"path":"archives/178db9e1.html","link":"","permalink":"https://alexandermucc.cn/archives/178db9e1.html","excerpt":"前言：随着互联网浪潮的翻腾，国内外涌现出越来越多优秀的社交网站让用户分享信息更加便捷。然后，如果你是一个不甘寂寞的程序猿（媛），是否也想要搭建一个属于自己的个人网站，如果你曾经或者现在正有这样的想法，请跟随这篇文章发挥你的Geek精神，让你快速拥有自己的博客网站，写文章记录生活，享受这种从0到1的过程。","text":"前言：随着互联网浪潮的翻腾，国内外涌现出越来越多优秀的社交网站让用户分享信息更加便捷。然后，如果你是一个不甘寂寞的程序猿（媛），是否也想要搭建一个属于自己的个人网站，如果你曾经或者现在正有这样的想法，请跟随这篇文章发挥你的Geek精神，让你快速拥有自己的博客网站，写文章记录生活，享受这种从0到1的过程。 你见过的最棒的个人博客界面是什么样的？ 什么是Hexo ? Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Heroku上，是搭建博客的首选框架。这里我们选用的是GitHub，你没看错，全球最大的同性恋交友网站（逃……）。Hexo同时也是GitHub上的开源项目，参见：hexojs/hexo 如果想要更加全面的了解Hexo，可以到其官网 Hexo 了解更多的细节，因为Hexo的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看。这里，默认各位猿/媛儿都知道GitHub就不再赘述。 这是我的个人博客效果: 吴润 · RunDouble 下面正式从零开始搭建年轻人的第一个网站。 搭建步骤： 获得个人网站域名 GitHub创建个人仓库 安装Git 安装Node.js 安装Hexo 推送网站 绑定域名 更换主题 初识MarkDown语法 发布文章 寻找图床 个性化设置 其他 附录 获得个人网站域名 域名是网站的入口，也是网站的第一印象，比如饿了么的官网的域名是：https://www.ele.me/ ，很是巧妙。常见的有com,cn,net,org等后缀，也有小众的xyz,me,io等后缀，根据你自己的喜好，选择不同的后缀，比如我选择就是常见的com后缀。很多小众奇特的后缀在大陆是没办法备案的，网站也就无法上线。然而使用GitHub托管我们的网站，完全不需要备案，因为托管我们的网站内容的服务器在美国，而且在国内备案流程也比较繁杂，时间需要一周左右。 申请域名的地方有很多，这里推荐阿里云：阿里云-为了无法计算的价值 申请入口：域名注册 购买域名这也是我们整个搭建过程中惟一一个需要花钱的地方。如果你已经有了空闲域名就无需购买，直接使用即可。 GitHub创建个人仓库 登录到GitHub,如果没有GitHub帐号，使用你的邮箱注册GitHub帐号：Build software better, together 点击GitHub中的New repository创建新仓库，仓库名应该为：用户名.http://github.io 这个用户名使用你的GitHub帐号名称代替，这是固定写法，比如我的仓库名为： 安装Git 什么是Git ?简单来说Git是开源的分布式版本控制系统，用于敏捷高效地处理项目。我们网站在本地搭建好了，需要使用Git同步到GitHub上。如果想要了解Git的细节，参看廖雪峰老师的Git教程：Git教程 从Git官网下载：Git - Downloading Package 现在的机子基本都是64位的，选择64位的安装包，下载后安装，在命令行里输入git测试是否安装成功，若安装失败，参看其他详细的Git安装教程。安装成功后，将你的Git与GitHub帐号绑定，鼠标右击打开Git Bash 或者在菜单里搜索Git Bash，设置user.name和user.email配置信息： 12git config --global user.name &quot;你的GitHub用户名&quot;git config --global user.email &quot;你的GitHub注册邮箱&quot; 生成ssh密钥文件： 1ssh-keygen -t rsa -C &quot;你的GitHub注册邮箱&quot; 然后直接三个回车即可，默认不需要设置密码然后找到生成的.ssh的文件夹中的id_rsa.pub密钥，将内容全部复制 打开GitHub_Settings_keys 页面，新建new SSH Key Title为标题，任意填即可，将刚刚复制的id_rsa.pub内容粘贴进去，最后点击Add SSH key。在Git Bash中检测GitHub公钥设置是否成功，输入 ssh &#x67;&#105;&#116;&#x40;&#103;&#105;&#116;&#104;&#117;&#98;&#46;&#99;&#x6f;&#109; ： 如上则说明成功。这里之所以设置GitHub密钥原因是，通过非对称加密的公钥与私钥来完成加密，公钥放置在GitHub上，私钥放置在自己的电脑里。GitHub要求每次推送代码都是合法用户，所以每次推送都需要输入账号密码验证推送用户是否是合法用户，为了省去每次输入密码的步骤，采用了ssh，当你推送的时候，git就会匹配你的私钥跟GitHub上面的公钥是否是配对的，若是匹配就认为你是合法用户，则允许推送。这样可以保证每次的推送都是正确合法的。 安装Node.js Hexo基于Node.js，Node.js下载地址：Download | Node.js 下载安装包，注意安装Node.js会包含环境变量及npm的安装，安装后，检测Node.js是否安装成功，在命令行中输入 node -v : 检测npm是否安装成功，在命令行中输入npm -v : 到这了，安装Hexo的环境已经全部搭建完成。 安装Hexo Hexo就是我们的个人博客网站的框架， 这里需要自己在电脑常里创建一个文件夹，可以命名为Blog，Hexo框架与以后你自己发布的网页都在这个文件夹中。创建好后，进入文件夹中，按住shift键，右击鼠标点击命令行 使用npm命令安装Hexo，输入： 1npm install -g hexo-cli 这个安装时间较长耐心等待，安装完成后，初始化我们的博客，输入： 1hexo init blog 注意，这里的命令都是作用在刚刚创建的Blog文件夹中。 为了检测我们的网站雏形，分别按顺序输入以下三条命令： 12345hexo new test_my_sitehexo ghexo s 这些命令在后面作介绍，完成后，打开浏览器输入地址： localhost:4000 可以看出我们写出第一篇博客，只不过我下图是我修改过的配置，和你的显示不一样。 现在来介绍常用的Hexo 命令 npm install hexo -g #安装Hexonpm update hexo -g #升级hexo init #初始化博客 命令简写hexo n “我的博客” == hexo new “我的博客” #新建文章hexo g == hexo generate #生成hexo s == hexo server #启动服务预览hexo d == hexo deploy #部署 hexo server #Hexo会监视文件变动并自动更新，无须重启服务器hexo server -s #静态模式hexo server -p 5000 #更改端口hexo server -i 192.168.1.1 #自定义 IPhexo clean #清除缓存，若是网页正常情况下可以忽略这条命令 刚刚的三个命令依次是新建一篇博客文章、生成网页、在本地预览的操作。 推送网站 上面只是在本地预览，接下来要做的就是就是推送网站，也就是发布网站，让我们的网站可以被更多的人访问。在设置之前，需要解释一个概念，在blog根目录里的_config.yml文件称为站点配置文件，如下图 进入根目录里的themes文件夹，里面也有个_config.yml文件，这个称为主题配置文件，如下图 下一步将我们的Hexo与GitHub关联起来，打开站点的配置文件_config.yml，翻到最后修改为： deploy:type: gitrepo: 这里填入你之前在GitHub上创建仓库的完整路径，记得加上 .gitbranch: master参考如下： 保存站点配置文件。 其实就是给hexo d 这个命令做相应的配置，让hexo知道你要把blog部署在哪个位置，很显然，我们部署在我们GitHub的仓库里。最后安装Git部署插件，输入命令： 1npm install hexo-deployer-git --save 如果出现拒绝访问则需要ping alexandermucc.github.io 若出现本地ip则需要对host配置 需要在站长工具( https://ip.tool.chinaz.com/github.io)上查找github.io域名的ip，把获取的ip在hosts文件中添加对应关系 解决途径：修改本地hosts文件（位置：C:/windows/system32/drivers/etc/hosts） 12345678# GitHub Start185.199.111.153 binance-docs.github.io52.74.223.119 github.com192.30.253.119 gist.github.com54.169.195.247 api.github.com185.199.111.153 assets-cdn.github.com151.101.76.133 raw.githubusercontent.com# GitHub End 这时，我们分别输入三条命令： 123hexo clean hexo g hexo d 其实第三条的 hexo d 就是部署网站命令，d是deploy的缩写。完成后，打开浏览器，在地址栏输入你的放置个人网站的仓库路径，即 http://xxxx.github.io (知乎排版可能会出现”http://“字样，参考下图) 比如我的xxxx就是我的GitHub用户名： 你就会发现你的博客已经上线了，可以在网络上被访问了。 绑定域名 虽然在Internet上可以访问我们的网站，但是网址是GitHub提供的:http://xxxx.github.io (知乎排版可能会出现”http://“字样) 而我们想使用我们自己的个性化域名，这就需要绑定我们自己的域名。这里演示的是在阿里云万网的域名绑定，在国内主流的域名代理厂商也就阿里云和腾讯云。登录到阿里云，进入管理控制台的域名列表，找到你的个性化域名，进入解析 然后添加解析 包括添加三条解析记录，192.30.252.153是GitHub的地址，你也可以ping你的 http://xxxx.github.io 的ip地址，填入进去。第三个记录类型是CNAME，CNAME的记录值是：你的用户名.http://github.io 这里千万别弄错了。第二步，登录GitHub，进入之前创建的仓库，点击settings，设置Custom domain，输入你的域名 点击save保存。第三步，进入本地博客文件夹 ，进入blog/source目录下，创建一个记事本文件，输入你的域名，对，只要写进你自己的域名即可。如果带有www，那么以后访问的时候必须带有www完整的域名才可以访问，但如果不带有www，以后访问的时候带不带www都可以访问。所以建议，不要带有www。这里我还是写了www(不建议带有www): 保存，命名为CNAME ，注意保存成所有文件而不是txt文件。 完成这三步，进入blog目录中，按住shift键右击打开命令行，依次输入： 1hexo cleanhexo ghexo d 这时候打开浏览器在地址栏输入你的个性化域名将会直接进入你自己搭建的网站。 更换主题 如果你不喜欢Hexo默认的主题，可以更换不同的主题，主题传送门：Themes 我自己使用的是Next主题，可以在blog目录中的themes文件夹中查看你自己主题是什么。现在把默认主题更改成Next主题，在blog目录中（就是命令行的位置处于blog目录）打开命令行输入： 1git clone https://github.com/iissnan/hexo-theme-next themes/next 这是将Next主题下载到blog目录的themes主题下的next文件夹中。打开站点的_config.yml配置文件，修改主题为next 打开主题的_config.yml配置文件，不是站点主题文件，找到Scheme Settings next主题有三个样式，我用的是Pisces，你们可以自己试试看，选择你自己喜欢的样式（只需要把行首的#去除，#是注释），选择好后，再次部署网站，hexo g、hexo d，查看效果。选择其他主题，按照上述过程即可实现。 初识Markdown语法 Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。Markdown语法简洁明了、容易掌握，而且功能比纯文本更强，因此写博客使用它，可以让用户更加专注的写文章，而不需要费尽心力的考虑样式，相对于html已经算是轻量级语言，像有道云笔记也支持Markdown写作。并且Markdown完全兼容html，也就是可以在文章里直接插入html代码。比如给博文添加音乐，就可以直接把音乐的外链html代码插入文章中。具体语法参看：Markdown 语法说明(简体中文版) 可以说十分钟就可以入门。当然，工欲善其事必先利其器，选择一个好的Markdown编辑器也是非常重要的，这里推荐MarkPad 和The Markdown Editor for Windows ，这是带有预览效果的编辑器，也可以使用本地的文本编辑器，更多的Markdown的语法与编辑器自己可以搜索了解。 发布文章 我们开始正式发布上线博客文章，在命令行中输入： 1hexo n &quot;博客名字&quot; 我们会发现在blog根目录下的source文件夹中的_post文件夹中多了一个 博客名字.md 文件，使用Markdown编辑器打开，就可以开始你的个人博客之旅了，Markdown常用的样式也就十来种，完全能够满足一般博文的样式要求，这是我的一篇博文内容示例： 通过带有预览样式的Markdown编辑器实时预览书写的博文样式，也可以通过命令 hexo s –debug 在本地浏览器的localhost:4000 预览博文效果。写好博文并且样式无误后，通过hexo g、hexo d 生成、部署网页。随后可以在浏览器中输入域名浏览。 寻找图床 图床，当博文中有图片时，若是少量图片，可以直接把图片存放在source文件夹中，但这显然不合理的，因为图片会占据大量的存储的空间，加载的时候相对缓慢 ，这时考虑把博文里的图片上传到某一网站，然后获得外部链接，使用Markdown语法，**** 完成图片的插入，这种网站就被成为图床。常见的简易的图床网站有：贴图库图片外链 国内算比较好的图床我认为有两个：新浪微博和 七牛云 ，七牛云的使用方法可以参看其他文章。图床最重要的就是稳定速度快，所以在挑选图床的时候一定要仔细，下图是博文插入图片，使用图床外链的示例： 个性化设置 所谓的个性化设置就是根据个人需要添加不同的插件及功能。 基本的有： 在站点配置文件_config.yml修改基本的站点信息 依次是网站标题、副标题、网站描述、作者、网站头像外部链接、网站语言、时区等。 在主题配置文件_config.yml修改基本的主题信息，如： 博文打赏的微信、支付宝二维码图片，这里我是直接把这两张放在根目录的source文件夹中，并没有使用图床外链。 社交外链的设置，即在侧栏展示你的个人社交网站信息。 博文分享的插件jiathis，值设置为true。在配置文件中有很多的个性化设置，可以自尝试更多的修改。 进阶个性化： 添加网易云音乐 打开网页版的网易云音乐，选择喜欢的音乐，点击生成外链播放器 复制外链的代码 比如在侧栏插入这首歌的音乐播放器，修改 blog\\themes\\next\\layout_macro的sidebar.swig文件，添加刚刚复制的外链代码 重新生成、部署网页，效果如下 设置背景 把你挑选的背景图片命名为：background.jpg，放在blog\\themes\\next\\source\\images里，在blog\\themes\\next\\source\\css_custom文件的custom.styl首部添加： 1body &#123; background:url(/images/background.jpg); background-attachment: fixed;&#125; background-attachment: fixed;是固定背景图片。 这是设置一张静态图片作为背景，其实Next主题自带有动态的背景效果，修改主题配置文件中的canvas_nest: false为canvas_nest: true即可。 增加侧栏菜单条目 默认的侧栏菜单条目有：首页、归档、标签、关于、搜索等。如果你想要增加其他的菜单条目，修改主题配置文件_config.yml里的Menu Settings中的menu和menu_icons两个地方 其中menu里是配置菜单项对应的页面位置（如：/love），menu_icons对应菜单项的图标，这里的图标是来自于Font Awesome ，所以你需要在Font Awesome网站上找到你需要的icon，然后把该icon的名字写在menu_icons对应菜单名后面，注意冒号有一个英文输入状态的空格。设置好后，在命令行里输入： 1hexo new page &quot;你所要增加的菜单项名称（要和你在menu中的填写要匹配）&quot; 新建的页面在博客根目录下的source文件里，这时你就可以对新建的页面自定义设计。 还有更多的进阶个性化设置，如SEO、评论系统、个人头像、博客分享、订阅功能、High功能、404网页设置等，可以参看： 主题配置 - NexT 使用文档 第三方服务集成 - NexT 使用文档 内置标签 - NexT 使用文 档进阶设定 - NexT 使用文档 有很多人私信问我High功能特效如何设置，这里推荐一篇同是Next主题网站博主的文章：为Hexo Next主题添加哈林摇特效（五） 其他 终于写到这里了，也算是基本圆满完成了我的写作初衷，总结自己的一些经验，分享一些有趣的东西，不过脖子也是僵硬的受不了。我知道很多人想要建立自己的个人网站却一直没有付诸行动，希望这篇文章能给你一点点灵感与想法，just do it。本文是windows平台的搭建过程，其他平台可以参看相关资料，也有很多其他优秀的博客框架值得学习。如果有任何建议或想法、或疑问欢迎在评论区交流， 做好的网站不妨在评论区贴出网址，让大家一起学习。 附录 以下是评论区贴出网址的博客展示： …Miss.j BlogDiary… RILWEIC Xin’s Notes 飞鸟与鱼 无名博客 iTesting软件测试知识分享 赵小源的个人博客 华嘉熠’s Blog Cocoon 罗少雄’s Blog 李四啊_ 其他优秀个人博客展示： 翁天信 · Dandy Weng chaoxuprim KENJI ENDO Moorez CodeSky 代码之空 大江东去 UI Design Portfolio of JJ Ying JeyZhang jacklightChen | 得到的都是侥幸 edwardtoday Rafal Tomal - Web Designer and Genesis Developer Projects and Work 绘画爱好者 万世奇的博客 Guillermo Rauch 相关文章： Hexo 从 GitHub 到阿里云","categories":[],"tags":[]},{"title":"Java基础之类与对象","slug":"Java基础之类与对象","date":"2021-06-17T12:54:40.000Z","updated":"2021-06-21T14:56:29.681Z","comments":true,"path":"archives/11f64e53.html","link":"","permalink":"https://alexandermucc.cn/archives/11f64e53.html","excerpt":"Java基础之类与对象","text":"Java基础之类与对象 一、OOP思想数据第一，其次是算法 1 类1.1 两大的特性封装【最重要】、继承 封装：实例字段不能别外界修改，只能通过方法调用。 好处：数据更加安全 继承 1.2 类中的组成实例字段、方法、状态 实例字段：类中的变量。对象中的数据。 获取实例字段的值一般需要三项内容：私有数据字段、公共字段访问器方法和更改器方法即Getter和Setter方法 方法：操作数据的过程 状态：特定实例对象实例字段的集合。通俗来说类中变量所赋的值。 2 对象三大特征对象的行为：对象完成的操作。即对象的方法 对象的状态：每个对象保存描述当前状况的信息。即调用方法，如何响应 对象的标识：区分相同行为不同状态的对象。举例人与人之间肯定存在着差异。 3 类之间的关系依赖 uses-a​ 一个类的方法使用或操纵另一个类的对象。 ​ 即一个类的方法需要使用另一个类的信息。举例，订单中需要客户的信用情况等，而商品则无需客户的信息。所以来说订单类依赖客户类。 ​ 需要降低依赖关系，避免耦合 聚合 has-a包含关系。 继承 is-a二、预定义类1 对象和对象变量对象通过一般通过构造器创建，但也可以通过静态工厂方法-类调用静态方法创建。构造器好比一个容器，对象好比容器中的物体。 对象变量是对对象的==引用==。算是起别名的意思，类比成人，每个人都有名字。 构造器 与类同名 构造器可以有多个 参数至少0个 没有返回值 和new操作符一起使用 在所有方法中不要使用与实例字段同名的变量 引用更改器方法和访问器方法 更改器方法会改变对象的状态 访问器方法只能访问对象不能修改对象 更改器方法和访问器方法好比Getter和Setter方法 更改器方法：对象的状态会发生变化 访问器方法：只访问对象而不修改对象的方法 三、自定义类文件名必须与public类相匹配 一个源文件中只能有一个public类 123public class Test &#123;&#125;class Employee&#123;&#125; 1 null引用引用数据类型会出现空指针异常 基本数据类型则不会出现该异常 2 显示参数和隐式参数显示参数：在方法中声明 隐式参数：未在方法中声明。一般用this指示隐式参数用于区分显示参数 3 基于类的权限访问该类的方法可以访问所属类的所有对象的私有数据。可以理解为方法能访问所有的实例字段 4 final实例字段final关键字修饰的字段为不可变字段。但对于String类中，还是可以改变 5 static修饰的字段和方法被static修饰的方法和字段，属于类而不属于任何单个对象 静态字段也被成为类字段 若没有显示赋初值，则每次加载类时都会初始化为默认值0,false,null 静态常量 静态方法 只能访问静态字段 不需要访问对象的状态 6 方法参数==Java中总是采用按值调用==，方法得到的是所有参数的一个副本。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495package demo05;public class Test &#123; public static void main(String[] args) &#123; /* * 1. 数字参数不能改变 */ double percent = 10; System.out.println(&quot;Before&quot; + percent); tripleValue(percent); System.out.println(&quot;After&quot; + percent); /* * 对象参数的状态 */ Employee harry = new Employee(&quot;Harry&quot;, 50000); tripleSalary(harry); System.out.println(harry.getSalary()); /* * 交换对象 */ Employee a = new Employee(&quot;A&quot;, 1); Employee b = new Employee(&quot;B&quot;, 2); swap(a,b); System.out.println(a.getName()); System.out.println(b.getName()); /* * 交换 */ System.out.println(&quot;--------&quot;); harry = a; a = b; b = harry; System.out.println(a.getName()); System.out.println(b.getName()); &#125; public static void tripleValue(double x)&#123; x *= 3; System.out.println(&quot;End of method&quot; + x); &#125; public static void tripleSalary(Employee x)&#123; x.raiseSalary(200); System.out.println(&quot;End of method&quot; + x.getSalary()); &#125; public static void swap(Employee x , Employee y)&#123; Employee temp = x; x = y; y = temp; System.out.println(&quot;End of method&quot; + x.getName()); System.out.println(&quot;End of method&quot; + y.getName()); &#125;&#125;class Employee&#123; private String name ; private double salary; public Employee(String name, double salary) &#123; this.name = name; this.salary = salary; &#125; public String getName() &#123; return name; &#125; public void setName(String name) &#123; this.name = name; &#125; public double getSalary() &#123; return salary; &#125; public void setSalary(double salary) &#123; this.salary = salary; &#125; public void raiseSalary(double byPercent)&#123; double raise = salary * byPercent / 100; salary += raise; &#125;&#125; 结果如下： 123456789101112Before10.0End of method30.0After10.0End of method150000.0150000.0End of methodBEnd of methodAAB--------BA 小结 方法不能修改基本数据类型的参数 方法可以改变对象参数的状态 方法不能让一个对象参数引用一个新的对象 四、对象构造对象构造：定义对象的初始化状态 1 重载重载：同名不同参数的方法 重载解析：查找匹配重载中的方法 2 默认字段初始化构造器没有显示设置初值，则会自动赋为默认值。 数值为0，布尔型为false，对象引用为null。 不赋初值影响可读性 字段和局部变量的区别 字段可以不用初始化 方法中的局部变量必须初始化 3 无参构造器类默认自带一个无参构造器，会对所属类的实例字段赋默认值 当有一个有参构造器时，若想无参构造器，则必须提供一个无参构造器 4 显示字段初始化避免发生空指针异常 创建类就给所属类的实例字段赋初值。 1234class Employee&#123; private String name = &quot;&quot;; private double salary = 0;&#125; 12345678910class Employee&#123; private static int nextId; private int id = assignId(); private static int assignId()&#123; int r = nextId; nextId++; return r; &#125;&#125; 5 参数名参数名尽量避免简单，需要和实例字段具有区分性 1234public Employee(String aName, double aSalary)&#123; name = aName; salary = aSalary;&#125; 1234public Employee(String aName, double aSalary)&#123; this.name = name; this.salary = salary;&#125; 6 关键字this另外有一个一个参数构造器 1234public Employee(double aSalary)&#123; this(&quot;Employee #&quot;+nextId,aSalary); nextId++;&#125; 7 初始化块初始化数据字段的方法 构造器中设置 声明中赋值 初始化块赋值 首先运行初始化块，初始化块中首先运行静态代码块，静态代码块一共只会执行一次。 然后运行构造器主体部分 调用构造器的过程 1. 构造器**第一行**调用另一个构造器，则执行另一个构造器 2. 否则，数据字段初始化为默认值`0,false,null`，按照类声明顺序，执行所有字段初始化方法和初始化块。 3. 执行构造器的主体 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263import java.util.ArrayList;import java.util.List;import java.util.Random;public class ConstructorTest &#123; public static void main(String[] args) &#123; List&lt;Employee&gt; staffs = new ArrayList&lt;&gt;(); Employee staff1 = new Employee(&quot;Harry&quot;,4000); Employee staff2 = new Employee(4000); Employee staff3 = new Employee(); staffs.add(staff1); staffs.add(staff2); staffs.add(staff3); for (Employee staff : staffs) &#123; System.out.println(staff); &#125; &#125;&#125;class Employee&#123; private static int nextId; private String name = &quot;&quot;; private double salary; private int id; // 静态代码块 static&#123; nextId = new Random().nextInt(10000); &#125; // 对象初始化块 &#123; id = nextId; nextId++; &#125; // Constructor public Employee(String aName,double aSalary)&#123; name = aName; salary = aSalary; &#125; public Employee(double salary)&#123; this(&quot;Employee #&quot; + nextId , salary); &#125; public Employee()&#123; &#125; @Override public String toString() &#123; return &quot;Employee&#123;&quot; + &quot;name=&#x27;&quot; + name + &#x27;\\&#x27;&#x27; + &quot;, salary=&quot; + salary + &quot;, id=&quot; + id + &#x27;&#125;&#x27;; &#125;&#125; 五、包包用来处理类重名问题 包名写法：域名倒序 com.alexandermucc.类名 1 类的导入完全限定名 import导入 ==只能使用星号(*)导入一个包，而不能导入import java.*,import java.*.*所有的包== 2 静态导入123import static java.lang.System.*out.println(&quot;Goodbye,World&quot;); 3 类路径类路径：所有包含类文件的集合 类能被多个程序共享，需要 类文件放在一个目录中 JAR文件放在一个目录中 设置类路径 类路径包括 基目录 当前目录 JAR文件 设置类路径 1java -classpath /home/user/classdir:.:/home/user/archives/archive.jar MyProg 六、 文档注释1 类注释必须放在import之后 类定义之前 1234567import ... /** * */public class Card&#123; &#125; 2 方法注释必须放在所描述的方法之前 123456789/** * * @param aName * @param aSalary */public Employee(String aName,double aSalary)&#123; name = aName; salary = aSalary;&#125; 七、类设计技巧 1 保证数据私有 绝对不要破坏封装性 2 一定要对数据进行初始化 3 不要在类中使用过多的基本类型 用其他类代替基本类型，使代码容易理解 4 不是所有的字段都需要单独的字段访问器和字段更改器 5 分解有过多职责的类 6 类名和方法名要能体现他们的职责 7 优先使用不可变的类","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"https://alexandermucc.cn/tags/Java/"},{"name":"Java基础知识","slug":"Java基础知识","permalink":"https://alexandermucc.cn/tags/Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"}]},{"title":"技术学习方法","slug":"技术学习方法","date":"2021-06-16T01:42:11.000Z","updated":"2021-06-21T10:10:41.110Z","comments":true,"path":"archives/9a1b163b.html","link":"","permalink":"https://alexandermucc.cn/archives/9a1b163b.html","excerpt":"学习新技术的方法学习新技术的几个步骤 写博客时注意培养框架思想。大局思维导图、细节写博客","text":"学习新技术的方法学习新技术的几个步骤 写博客时注意培养框架思想。大局思维导图、细节写博客 一、 认识和了解1. 百科定义：了解该技术是什么2. 解决什么问题：3. 同类技术有哪些：4. 技术的组成部分：5. 为什么这个技术会出现 二、 学语法学用法多思考、多提炼、多总结、写博客 **上手比较容易 ** 视频教程 阿里云、腾迅课堂、bilibili 快速上手视频 看官网的快速入门文档、简单搭建的视频同上面 入门博客 CSDN、博客园、简书等 **比较系统了解 ** 基础技术类：看权威的书籍、经典的书籍 框架类：看官方文档 三、练习 局部练习、小型实战、搭建环境 遇到的坑及时记录、写博客 四、造轮子上手实际开源项目 github、gitee等","categories":[],"tags":[]},{"title":"觉醒年代","slug":"觉醒年代","date":"2021-06-15T13:57:04.000Z","updated":"2021-06-21T14:59:27.058Z","comments":true,"path":"archives/a3c72645.html","link":"","permalink":"https://alexandermucc.cn/archives/a3c72645.html","excerpt":"觉醒年代","text":"觉醒年代 李大钊：英雄淘尽大江流，歌舞依然上画楼。一代声华空醉梦，十年潦倒剩穷愁。竹帘半卷江天雨，蕉扇初迎海外秋。忆到万山无语处，只应共泛五湖舟 蔡元培校长办学理念各位，五年前严复先生为北大校长时，我服务于教育部，做教育总长。记得北大开学的那天，我为本校做了一点贡献。诸君多自预科毕业而来，想必也知道，士别三日当刮目相看，何况时日已过去数年，诸君与往昔相比，一定有了长足的进步。我今天就要服务于北大，我有三件事要告诉诸君： 一、抱定宗旨。诸君来此求学，必有一定宗旨，须知宗旨，正大与否，必先知大学之性质。大学者，研究高深学问之者也。现在外面常常有人指责北大之腐败，是因为来此求学者，都抱有当官发财的思想，以此为捷径。因为一心要做官，一心想发财，所以，从不问教员之学问深浅，唯问教员官职的大小，官阶大的，就特别受欢迎，这大概是为了方便毕业时有人提携吧。我想说的是，诸君来北大求学，三年或四年，时间不谓不多，如能爱惜光阴，孜孜求学，则其造诣定然会很高、很深。诸君来北大求学的宗旨是做官发财，那这个宗旨就错了，求学的路，就必然走偏了。平时冶游，考试来了，才去翻读讲义，不问学问之有无，唯争分数之多寡；考试结束，书籍，束之高阁，毫不过问，潦草塞责；文凭到手，即可以此活动于社会，光阴虚度，学问毫无。这是自误啊，这与到北大求学的真正宗旨，是大相背驰的。大家也许还记得，发生不久的辛亥革命，我们之所以要革命，就是因为清朝政府太腐败，就是现在也有许多人，对现状不满意，也是因为社会道德沦丧。诸君在这个时候，如果不打好基础，勤奋求学，万一为生计所迫，做了教员，则一定会耽误学生哪；你进入政界，则一定会耽误国家呀，这是耽误别人，误人误己。所以，宗旨不可以不正大，这是我希望于诸君者之一。 二、砥砺德行。如今的社会风气啊，越来越苟且敷衍，只顾眼前，道德伦丧、败坏德行的事情，触目皆是，不是德行根基牢固的人，少有不被这种社会风气所污染。各位，国家的兴衰，要看社会风气是高尚还是低劣，如果都流行于这种社会风气，前途不堪设想，所以要有卓越之人，以身作则，尽力去矫正这种颓废的社会风气。诸君皆为大学学生，地位甚高，肩此重任，责无旁贷。如果德不修、学不讲，还与这种颓废的社会风气同流合污，那亦是侮辱自己，更何谈，做他人的榜样呢？所以，品行不可以不严谨对待和修养，这是我希望于诸君者之二。 三、尊敬师友、坦诚相见、开诚布公、相互勉励。各位，我们同处北大，要荣辱与共啊。我相信，我们北大一定会是出文化大家、思想大家的地方。 蔡老的话到今天也有点醒之作用，醍醐灌顶，如坐针毡。 抱定宗旨，爱惜光阴，孜孜求学才不会误人误己 砥砺德行，以身作则 辜鸿铭什么是中国人：有着赤子之心，成人之思，过着心灵生活的人","categories":[],"tags":[{"name":"影视","slug":"影视","permalink":"https://alexandermucc.cn/tags/%E5%BD%B1%E8%A7%86/"},{"name":"熏陶","slug":"熏陶","permalink":"https://alexandermucc.cn/tags/%E7%86%8F%E9%99%B6/"}]}],"categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"https://alexandermucc.cn/tags/Java/"},{"name":"Java基础知识","slug":"Java基础知识","permalink":"https://alexandermucc.cn/tags/Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"},{"name":"影视","slug":"影视","permalink":"https://alexandermucc.cn/tags/%E5%BD%B1%E8%A7%86/"},{"name":"熏陶","slug":"熏陶","permalink":"https://alexandermucc.cn/tags/%E7%86%8F%E9%99%B6/"}]}